// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SarajevoAir.Api.Data;

#nullable disable

namespace SarajevoAir.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("SarajevoAir.Api.Entities.SarajevoForecast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Aqi")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Pm25Avg")
                        .HasColumnType("REAL");

                    b.Property<double?>("Pm25Max")
                        .HasColumnType("REAL");

                    b.Property<double?>("Pm25Min")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("Date")
                        .IsUnique()
                        .HasDatabaseName("IX_SarajevoForecast_Date");

                    b.ToTable("SarajevoForecasts");
                });

            modelBuilder.Entity("SarajevoAir.Api.Entities.SarajevoMeasurement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AqiValue")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Co")
                        .HasColumnType("REAL");

                    b.Property<double?>("No2")
                        .HasColumnType("REAL");

                    b.Property<double?>("O3")
                        .HasColumnType("REAL");

                    b.Property<double?>("Pm10")
                        .HasColumnType("REAL");

                    b.Property<double?>("Pm25")
                        .HasColumnType("REAL");

                    b.Property<double?>("So2")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Timestamp")
                        .HasDatabaseName("IX_SarajevoMeasurements_Timestamp");

                    b.ToTable("SarajevoMeasurements");
                });

            modelBuilder.Entity("SarajevoAir.Api.Entities.SimpleAqiRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AqiValue")
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("City", "Timestamp")
                        .HasDatabaseName("IX_AqiRecords_CityTimestamp");

                    b.ToTable("SimpleAqiRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
