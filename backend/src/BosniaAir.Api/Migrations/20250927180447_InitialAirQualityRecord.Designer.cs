// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using BosniaAir.Api.Data;

#nullable disable

namespace BosniaAir.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250927180447_InitialAirQualityRecord")]
    partial class InitialAirQualityRecord
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("BosniaAir.Api.Entities.AirQualityRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AqiValue")
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<double?>("Co")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("DominantPollutant")
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<string>("ForecastJson")
                        .HasColumnType("TEXT");

                    b.Property<double?>("No2")
                        .HasColumnType("REAL");

                    b.Property<double?>("O3")
                        .HasColumnType("REAL");

                    b.Property<double?>("Pm10")
                        .HasColumnType("REAL");

                    b.Property<double?>("Pm25")
                        .HasColumnType("REAL");

                    b.Property<string>("RecordType")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<double?>("So2")
                        .HasColumnType("REAL");

                    b.Property<string>("StationId")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("City", "RecordType")
                        .IsUnique()
                        .HasDatabaseName("UX_AirQuality_ForecastPerCity")
                        .HasFilter("[RecordType] = 'Forecast'");

                    b.HasIndex("City", "RecordType", "Timestamp")
                        .HasDatabaseName("IX_AirQuality_CityTypeTimestamp");

                    b.ToTable("AirQualityRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
